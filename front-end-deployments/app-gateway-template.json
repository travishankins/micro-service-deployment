{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appGatewayName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Application Gateway."
      }
    },
    "subnetResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the subnet where the Application Gateway will be deployed."
      }
    },
    "privateIpAddress": {
      "type": "string",
      "metadata": {
        "description": "The static private IP address for the Application Gateway."
      }
    },
    "appServiceFqdn": {
      "type": "string",
      "metadata": {
        "description": "The fully qualified domain name (FQDN) of the backend App Service."
      }
    },
    "sslCertificateData": {
      "type": "securestring",
      "metadata": {
        "description": "The base64-encoded SSL certificate data."
      }
    },
    "sslCertificatePassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the SSL certificate."
      }
    },
    "publicIpName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Public IP address resource."
      }
    },
    "publicIpAllocationMethod": {
      "type": "string",
      "defaultValue": "Static",
      "allowedValues": ["Static", "Dynamic"],
      "metadata": {
        "description": "The allocation method for the Public IP address (Static or Dynamic)."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIpName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIpAllocationMethod')]"
      },
      "sku": {
        "name": "Standard"
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2020-11-01",
      "name": "[parameters('appGatewayName')]",
      "location": "West US 3",
      "tags": {
        "Application": "Cloud Applications",
        "Creator": "Infrastructure",
        "Environment": "DevTest",
        "Requestor": "Enterprise Architecture"
      },
      "properties": {
        "sku": {
          "name": "WAF_v2",
          "tier": "WAF_v2",
          "capacity": 1
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[parameters('subnetResourceId')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayPrivateIp",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('privateIpAddress')]",
              "subnet": {
                "id": "[parameters('subnetResourceId')]"
              }
            }
          },
          {
            "name": "appGatewayPublicIp",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "frontendPort",
            "properties": {
              "port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "backendAddresses": [
                {
                  "fqdn": "[parameters('appServiceFqdn')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "port": 443,
              "protocol": "Https",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": true,
              "probeEnabled": true
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpsListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('appGatewayName'), 'appGatewayPrivateIp')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('appGatewayName'), 'frontendPort')]"
              },
              "protocol": "Https",
              "sslCertificate": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', parameters('appGatewayName'), 'sslCert')]"
              }
            }
          }
        ],
        "sslCertificates": [
          {
            "name": "sslCert",
            "properties": {
              "data": "[parameters('sslCertificateData')]",
              "password": "[parameters('sslCertificatePassword')]"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "appGatewayRoutingRule",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('appGatewayName'), 'appGatewayHttpsListener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('appGatewayName'), 'appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('appGatewayName'), 'appGatewayBackendHttpSettings')]"
              }
            }
          }
        ]
      }
    }
  ]
}
